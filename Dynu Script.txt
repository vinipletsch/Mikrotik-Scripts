###############################################################################################################
#
# Mikrotik Script for Dynu API
#
# Check current IP addres and update domains with HTTPS API DYNU.COM
# Works fine with double NAT 
#
# Based on https://www.dynu.com/DynamicDNS/IPUpdateClient/Mikrotik-Dynamic-DNS
# Only change the arguments below:
		- line 31 YOUR-DYNU-USERNAME					test
		- line 32 "YOUR-DYNU-PASSWORD"				    "123test"
		- line 33 "YOUR-DYNU-DOMAIN"					"test.dynu.com"
	
		
############# Get the current IP address from the internet ############ 

#GET http://checkip.dynu.com

:log info "------------------------Updating Dynu IP Address-------------------------"        
/tool fetch mode=http address="checkip.dynu.com" src-path="/" dst-path="/dynu.checkip.html"
:local result [/file get dynu.checkip.html contents]    ### Expected response: Current IP Address: xxx.xxx.xxx.xxx
:log info $result

################ Parsing result################

:local resultLen [:len $result]
:local startLoc [:find $result ": " -1]
:set startLoc ($startLoc + 2)
:local endLoc [:len $result]
:local currentIP [:pick $result $startLoc $endLoc]
:global ddnsuser YOUR-DYNU-USERNAME					
:global ddnspass "YOUR-DYNU-PASSWORD"				
:global ddnshost "YOUR-DYNU-DOMAIN"					
:global ipddns [:resolve $ddnshost];

###############################################

######## For debug purpose ####################

#:log info $startLoc
#:log info $endLoc
#:log info $currentIP

###############################################

########## Check IP and send updates (IF NEEDED)

:if ($ipddns != $currentIP) do={
:log info ("DynuDDNS: IP-Dynu = $ipddns")
:log info ("DynuDDNS: IP-Fresh = $currentIP")
:log info "DynuDDNS: Update IP needed, Sending UPDATE...!"
:global str "/nic/update?hostname=$ddnshost&myip=$currentIP"
/tool fetch address=api.dynu.com src-path=$str mode=https user=$ddnsuser password=$ddnspass dst-path=("/Dynu.".$ddnshost)
:delay 1
:global str [/file find name="Dynu.$ddnshost"];
/file remove $str
:global ipddns $currentIP
:log info "DynuDDNS: IP updated to $currentIP!"
:log info " -------------------------------------------------------------------------"
:log info " "
} else={
:log info "DynuDDNS: No change needed";
:log info "--------------------------------------------------------------------------"
:log info " "
} }
